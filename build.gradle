buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
}

apply plugin: 'org.springframework.boot'


repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

sourceSets {
    // Note that just declaring this sourceset creates two configurations.
    perfTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}
configurations {
    perfTestCompile.extendsFrom testCompile
    perfTestRuntime.extendsFrom testRuntime
}

String url = System.properties.getProperty("TEST_URL")
task perfTest(type:Test){
    systemProperties systemProperties
    description = "Run performance tests (located in src/perfTest/...). ${url}"
    println "Checking connection to ${url}"

    testClassesDirs = sourceSets.perfTest.output.classesDirs
    classpath = sourceSets.perfTest.runtimeClasspath
}

jar {
    manifest {
        attributes(
                'Main-Class': 'net.notejam.spring.Application'
        )
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:1.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-mail:1.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:1.3.0.RELEASE'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
    compile 'org.hibernate:hibernate-validator:5.2.2.Final'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'
    compile 'de.malkusch.validation:validation:0.3.0'
    runtime 'org.hsqldb:hsqldb:2.3.3'

    // Use MySQL Connector-J
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.14'

    testCompile 'org.springframework.boot:spring-boot-starter-test:1.3.0.RELEASE'

    testCompile 'org.springframework.security:spring-security-test:4.0.3.RELEASE'
    perfTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'

}

bootRun {
    systemProperties System.properties
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'net.notejam'
version = '0.0.1-SNAPSHOT'
description = 'Notejam: Spring'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
